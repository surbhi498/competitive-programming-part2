First Index of Number
Send Feedback
Given an array of length N and an integer x, you need to find and return the first index of integer x present in the array. Return -1 if it is not present in the array.
First index means, the index of first occurrence of x in the input array.
Do this recursively. Indexing in the array starts from 0.
Input Format :
Line 1 : An Integer N i.e. size of array
Line 2 : N integers which are elements of the array, separated by spaces
Line 3 : Integer x
Output Format :
first index or -1
Constraints :
1 <= N <= 10^3
Sample Input :
4
9 8 10 8
8
Sample Output :
1
#include <iostream>
using namespace std;
int firstindex(int arr[],int i,int n,int x){
    /*int output[n];
   static int k = 0;
    int gh;
    if(i>n){
   if(k==0){
       
       return -1;
   }
   else{
   gh = output[k-1]; 
   return gh;
   }
    // return -1;   
    }
    else if(arr[i]==x)
    {
    output[k++]=i;    
        
    }
    else{
        
        return firstindex(arr,i+1,n,x);
        
    }
    
    
 // gh = output[k-1]; 
  //return gh;  */
 if(i>n) 
 return -1; 
 else if(arr[i]==x){
      
      return (i);
  }
  
 else{
     
     return lastindex(arr,i+1,n,x);
     
     
 } 
    
}
int main() {
	//cout<<"GfG!";
	int n;
	int x;
	cin>>n>>x;
	int arr[n];
	for(int i=0;i<n;i++){
	    
	 cin>>arr[i];   
	}   
	int i=0;
	int hj = lastindex(arr,i,n,x);
	cout<<hj;
	return 0;
}
